name: Full CI Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  frontend-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci --prefer-offline --no-audit
      - run: npm run lint

  frontend-tests:
    runs-on: ubuntu-latest
    needs: frontend-lint
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci --prefer-offline --no-audit
      - run: npm run test

  backend-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: |
          pip install flake8 black isort --cache-dir ~/.cache/pip
          flake8 .
          black --check .
          isort . --check-only

  backend-tests:
    runs-on: ubuntu-latest
    needs: backend-lint
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: |
          pip install -r requirements.txt --cache-dir ~/.cache/pip
          pip install pytest pytest-django --cache-dir ~/.cache/pip
          python manage.py test

  docker-build-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: ${{ runner.os }}-docker-
      - run: |
          docker build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            -t my-app:ci .
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile
