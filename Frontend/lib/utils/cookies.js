// lib/utils/cookies.js

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è cookie
export const setCookie = (name, value, days = 7) => {
  if (typeof window === "undefined") return

  try {
    const expires = new Date()
    expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000)
    
    document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Lax;Secure=${window.location.protocol === 'https:'}`
    
    console.log(`üç™ Cookie ${name} saved successfully`)
  } catch (error) {
    console.error(`‚ùå Failed to save cookie ${name}:`, error)
  }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è cookie
export const getCookie = (name) => {
  if (typeof window === "undefined") return null

  try {
    const nameEQ = name + "="
    const ca = document.cookie.split(';')
    
    for (let i = 0; i < ca.length; i++) {
      let c = ca[i]
      while (c.charAt(0) === ' ') c = c.substring(1, c.length)
      if (c.indexOf(nameEQ) === 0) {
        const value = decodeURIComponent(c.substring(nameEQ.length, c.length))
        console.log(`üç™ Cookie ${name} retrieved successfully`)
        return value
      }
    }
    return null
  } catch (error) {
    console.error(`‚ùå Failed to get cookie ${name}:`, error)
    return null
  }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è cookie
export const deleteCookie = (name) => {
  if (typeof window === "undefined") return

  try {
    document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/`
    console.log(`üóëÔ∏è Cookie ${name} deleted successfully`)
  } catch (error) {
    console.error(`‚ùå Failed to delete cookie ${name}:`, error)
  }
}

// –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
export const setAuthToken = (token) => {
  setCookie('authToken', token, 7) // –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞ 7 –¥–Ω—ñ–≤
  
  // –¢–∞–∫–æ–∂ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage —è–∫ fallback
  if (typeof window !== "undefined") {
    try {
      localStorage.setItem('authToken', token)
    } catch (error) {
      console.error("‚ùå Failed to save token to localStorage:", error)
    }
  }
}

export const getAuthToken = () => {
  // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ cookies
  let token = getCookie('authToken')
  
  // –Ø–∫—â–æ –≤ cookies –Ω–µ–º–∞—î, –ø—Ä–æ–±—É—î–º–æ localStorage
  if (!token && typeof window !== "undefined") {
    try {
      token = localStorage.getItem('authToken')
      // –Ø–∫—â–æ –∑–Ω–∞–π—à–ª–∏ –≤ localStorage, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ cookies
      if (token) {
        setCookie('authToken', token, 7)
      }
    } catch (error) {
      console.error("‚ùå Failed to get token from localStorage:", error)
    }
  }
  
  return token
}

export const setUserData = (user) => {
  const userData = JSON.stringify(user)
  setCookie('userData', userData, 7)
  
  // –¢–∞–∫–æ–∂ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage —è–∫ fallback
  if (typeof window !== "undefined") {
    try {
      localStorage.setItem('userData', userData)
    } catch (error) {
      console.error("‚ùå Failed to save user data to localStorage:", error)
    }
  }
}

export const getUserData = () => {
  // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ cookies
  let userData = getCookie('userData')
  
  if (userData) {
    try {
      return JSON.parse(userData)
    } catch (error) {
      console.error("‚ùå Failed to parse user data from cookies:", error)
    }
  }
  
  // –Ø–∫—â–æ –≤ cookies –Ω–µ–º–∞—î, –ø—Ä–æ–±—É—î–º–æ localStorage
  if (typeof window !== "undefined") {
    try {
      userData = localStorage.getItem('userData')
      if (userData) {
        const parsedData = JSON.parse(userData)
        // –Ø–∫—â–æ –∑–Ω–∞–π—à–ª–∏ –≤ localStorage, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ cookies
        setCookie('userData', userData, 7)
        return parsedData
      }
    } catch (error) {
      console.error("‚ùå Failed to get user data from localStorage:", error)
    }
  }
  
  return null
}

export const clearAuthData = () => {
  // –í–∏–¥–∞–ª—è—î–º–æ –∑ cookies
  deleteCookie('authToken')
  deleteCookie('userData')
  
  // –í–∏–¥–∞–ª—è—î–º–æ –∑ localStorage
  if (typeof window !== "undefined") {
    try {
      localStorage.removeItem('authToken')
      localStorage.removeItem('userData')
    } catch (error) {
      console.error("‚ùå Failed to clear auth data from localStorage:", error)
    }
  }
  
  console.log("üóëÔ∏è All auth data cleared")
}